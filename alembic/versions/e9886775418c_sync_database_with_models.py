"""Sync database with models

Revision ID: e9886775418c
Revises: b80ee4268b72
Create Date: 2025-09-03 01:58:50.345344

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e9886775418c'
down_revision: Union[str, None] = 'b80ee4268b72'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('patients', sa.Column('patient_uuid', sa.String(length=36), nullable=False, server_default=sa.text("gen_random_uuid()")))
    op.create_index(op.f('ix_patients_patient_uuid'), 'patients', ['patient_uuid'], unique=True)

    op.create_table('doctor_patient_assignments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.Column('patient_uuid', sa.String(length=36), nullable=False),
    sa.Column('assigned_at', sa.DateTime(), nullable=True),
    sa.Column('referred_by_doctor_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors.id'], ),
    sa.ForeignKeyConstraint(['patient_uuid'], ['patients.patient_uuid'], ),
    sa.ForeignKeyConstraint(['referred_by_doctor_id'], ['doctors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_doctor_patient_assignments_id'), 'doctor_patient_assignments', ['id'], unique=False)
    op.drop_index('ix_users_id', table_name='users')
    op.drop_index('ix_users_username', table_name='users')
    op.drop_table('users')
    op.add_column('doctors', sa.Column('username', sa.String(), nullable=False, server_default=''))
    op.add_column('doctors', sa.Column('hashed_password', sa.String(length=255), nullable=False, server_default=''))
    op.add_column('doctors', sa.Column('first_name', sa.String(length=100), nullable=False, server_default=''))
    op.add_column('doctors', sa.Column('last_name', sa.String(length=100), nullable=False, server_default=''))
    op.add_column('doctors', sa.Column('phone_number', sa.String(length=20), nullable=True))
    op.add_column('doctors', sa.Column('specialization', sa.String(length=100), nullable=False, server_default=''))
    op.add_column('doctors', sa.Column('is_active', sa.Boolean(), nullable=False, server_default='true'))
    op.add_column('doctors', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.create_index(op.f('ix_doctors_username'), 'doctors', ['username'], unique=True)
    op.drop_column('doctors', 'contact')
    op.drop_column('doctors', 'name')
    op.drop_column('doctors', 'designation')
    op.add_column('patients', sa.Column('age', sa.Integer(), nullable=True))
    op.add_column('patients', sa.Column('gender', sa.Enum('MALE', 'FEMALE', 'OTHER', name='genderenum', native_enum=False), nullable=True))
    op.add_column('patients', sa.Column('status', sa.String(length=30), nullable=True))
    op.alter_column('patients', 'contact',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=100),
               nullable=True)
    op.alter_column('patients', 'email',
               existing_type=sa.VARCHAR(length=150),
               type_=sa.String(length=100),
               nullable=True)
    op.alter_column('patients', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_index('ix_patients_doctor_id', table_name='patients')
    op.drop_index('ix_patients_email', table_name='patients')
    op.drop_constraint('patients_doctor_id_fkey', 'patients', type_='foreignkey')
    op.drop_column('patients', 'doctor_id')
    op.drop_column('patients', 'place')
    op.add_column('visits', sa.Column('patient_uuid', sa.String(length=36), nullable=False, server_default=sa.text("gen_random_uuid()")))
    op.add_column('visits', sa.Column('doctor_id', sa.Integer(), nullable=False, server_default='0'))
    op.add_column('visits', sa.Column('date_of_visit', sa.DateTime(), nullable=True))
    op.add_column('visits', sa.Column('observation', sa.Text(), nullable=True))
    op.add_column('visits', sa.Column('medicines_prescribed', sa.Text(), nullable=True))
    op.add_column('visits', sa.Column('comments', sa.Text(), nullable=True))
    op.drop_index('ix_visits_patient_id', table_name='visits')
    op.drop_constraint('visits_patient_id_fkey', 'visits', type_='foreignkey')
    op.create_foreign_key(None, 'visits', 'patients', ['patient_uuid'], ['patient_uuid'])
    op.create_foreign_key(None, 'visits', 'doctors', ['doctor_id'], ['id'])
    op.drop_column('visits', 'patient_id')
    op.drop_column('visits', 'visit_date')
    op.drop_column('visits', 'remarks')
    op.drop_column('visits', 'diagnosis')
    op.drop_column('visits', 'prescription')
    op.drop_column('visits', 'created_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('visits', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.add_column('visits', sa.Column('prescription', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('visits', sa.Column('diagnosis', sa.VARCHAR(length=250), autoincrement=False, nullable=False))
    op.add_column('visits', sa.Column('remarks', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('visits', sa.Column('visit_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False))
    op.add_column('visits', sa.Column('patient_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'visits', type_='foreignkey')
    op.drop_constraint(None, 'visits', type_='foreignkey')
    op.create_foreign_key('visits_patient_id_fkey', 'visits', 'patients', ['patient_id'], ['id'])
    op.create_index('ix_visits_patient_id', 'visits', ['patient_id'], unique=False)
    op.drop_column('visits', 'comments')
    op.drop_column('visits', 'medicines_prescribed')
    op.drop_column('visits', 'observation')
    op.drop_column('visits', 'date_of_visit')
    op.drop_column('visits', 'doctor_id')
    op.drop_column('visits', 'patient_uuid')
    op.add_column('patients', sa.Column('place', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.add_column('patients', sa.Column('doctor_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_foreign_key('patients_doctor_id_fkey', 'patients', 'doctors', ['doctor_id'], ['id'])
    op.drop_index(op.f('ix_patients_patient_uuid'), table_name='patients')
    op.create_index('ix_patients_email', 'patients', ['email'], unique=False)
    op.create_index('ix_patients_doctor_id', 'patients', ['doctor_id'], unique=False)
    op.alter_column('patients', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('patients', 'email',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=150),
               nullable=False)
    op.alter_column('patients', 'contact',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=20),
               nullable=False)
    op.drop_column('patients', 'status')
    op.drop_column('patients', 'gender')
    op.drop_column('patients', 'age')
    op.drop_column('patients', 'patient_uuid')
    op.add_column('doctors', sa.Column('designation', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
    op.add_column('doctors', sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
    op.add_column('doctors', sa.Column('contact', sa.VARCHAR(length=20), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_doctors_username'), table_name='doctors')
    op.drop_column('doctors', 'updated_at')
    op.drop_column('doctors', 'is_active')
    op.drop_column('doctors', 'specialization')
    op.drop_column('doctors', 'phone_number')
    op.drop_column('doctors', 'last_name')
    op.drop_column('doctors', 'first_name')
    op.drop_column('doctors', 'hashed_password')
    op.drop_column('doctors', 'username')
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='users_pkey')
    )
    op.create_index('ix_users_username', 'users', ['username'], unique=False)
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.drop_index(op.f('ix_doctor_patient_assignments_id'), table_name='doctor_patient_assignments')
    op.drop_table('doctor_patient_assignments')
    # ### end Alembic commands ###